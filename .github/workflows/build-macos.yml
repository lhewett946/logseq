# workflow to build the MacOS version of the app
name: Build MacOS

permissions:
  contents: read
on:
  workflow_call:

env:
  CLOJURE_VERSION: '1.11.1.1413'
  NODE_VERSION: '22'
  JAVA_VERSION: '21'

jobs:
  build-macos-x64:
    name: MacOS x64 Build
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@v4
    
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
    
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{env.JAVA_VERSION}}
    
      - name: Set up Clojure
        uses: DeLaGuardo/setup-clojure@13.2
        with:
          cli: ${{env.CLOJURE_VERSION}}
                    
      - name: Build/Release Electron App for x64
        run: | 
          yarn install
          sudo npm install gulp-cli -g
          gulp build
          yarn cljs:release-electron
          cd static
          yarn install
          yarn electron:make
            
      - name: Save x64 artifacts
        run: |
          mkdir -p builds
          mv static/out/make/Logseq.dmg ./builds/Logseq-darwin-x64.dmg
          mv static/out/make/zip/darwin/x64/*.zip ./builds/Logseq-darwin-x64.zip
            
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: logseq-darwin-x64-builds
          path: builds
            
  #build-macos-arm64:
  #  name: MacOS arm64 Build
  #  runs-on: macos-13
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v4
  #  
  #    - name: Install Node.js, NPM and Yarn
  #      uses: actions/setup-node@v4
  #      with:
  #        node-version: ${{ env.NODE_VERSION }}
  #  
  #    - name: Set up Java
  #      uses: actions/setup-java@v4
  #      with:
  #        distribution: 'zulu'
  #        java-version: ${{env.JAVA_VERSION}}
  #  
  #    - name: Set up Clojure
  #      uses: DeLaGuardo/setup-clojure@13.2
  #      with:
  #        cli: ${{env.CLOJURE_VERSION}}
  #  
  #    - name: Fetch deps
  #      env:
  #        npm_config_arch: arm64
  #      run: |
  #        yarn install --target_arch=arm64 --target_platform=darwin
  #        sudo npm install gulp-cli -g
  #        gulp build
  #        yarn cljs:release-electron
  #        cd static
  #        yarn install --target_arch=arm64 --target_platform=darwin
  #          
  #    - name: Build/Release Electron App for arm64
  #      run: yarn electron:make-macos-arm64
  #        
  #    - name: Save arm64 artifacts
  #      run: |
  #        mkdir -p builds
  #        mv static/out/make/Logseq.dmg ./builds/Logseq-darwin-arm64.dmg
  #        mv static/out/make/zip/darwin/arm64/*.zip ./builds/Logseq-darwin-arm64.zip
  #          
  #    - name: Upload Artifact
  #      uses: actions/upload-artifact@v4
  #      with:
  #        name: logseq-darwin-arm64-builds
  #        path: builds
            